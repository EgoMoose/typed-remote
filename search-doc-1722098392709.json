[{"title":"TypedRemote","type":0,"sectionRef":"#","url":"/typed-remote/api/TypedRemote","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"TypedRemote","url":"/typed-remote/api/TypedRemote#types","content":" "},{"title":"Event<T...>​","type":1,"pageTitle":"TypedRemote","url":"/typed-remote/api/TypedRemote#Event<T...>","content":"&lt;/&gt; interface Event&lt;T...&gt; { OnClientEvent: Signal&lt;T...&gt;, OnServerEvent: PlayerSignal&lt;T...&gt;, FireClient: ( self: Event&lt;T...&gt;, player: Player , T... ) → (), FireAllClients: ( self: Event&lt;T...&gt;, T... ) → (), FireServer: ( self: Event&lt;T...&gt;, T... ) → (), }   "},{"title":"UnreliableEvent<T...>​","type":1,"pageTitle":"TypedRemote","url":"/typed-remote/api/TypedRemote#UnreliableEvent<T...>","content":"&lt;/&gt; interface UnreliableEvent&lt;T...&gt; { OnClientEvent: Signal&lt;T...&gt;, OnServerEvent: PlayerSignal&lt;T...&gt;, FireClient: ( self: Event&lt;T...&gt;, player: Player , T... ) → (), FireAllClients: ( self: Event&lt;T...&gt;, T... ) → (), FireServer: ( self: Event&lt;T...&gt;, T... ) → (), }   "},{"title":"Function<T..., R...>​","type":1,"pageTitle":"TypedRemote","url":"/typed-remote/api/TypedRemote#Function<T..., R...>","content":"&lt;/&gt; interface Function&lt;T..., R...&gt; { InvokeServer: ( self: Function&lt;T..., R...&gt;, T... ) → R..., OnServerInvoke: ( player: Player , T... ) → R..., }  "},{"title":"Functions​","type":1,"pageTitle":"TypedRemote","url":"/typed-remote/api/TypedRemote#functions","content":" "},{"title":"parent​","type":1,"pageTitle":"TypedRemote","url":"/typed-remote/api/TypedRemote#parent","content":"&lt;/&gt; TypedRemote.parent(parent: Instance ) → ( (name: string) → RemoteFunction , (name: string) → RemoteEvent , (name: string) → UnreliableRemoteEvent ) Creates a memoized version of the func, event, and unreliableEvent functions that include the parent in each call. -- Create RF and RE functions that use the current script as the instance parent: local RF, RE, URE = TypedRemote.parent(script) local remoteFunc = RF(&quot;RemoteFunc&quot;)   "},{"title":"func​","type":1,"pageTitle":"TypedRemote","url":"/typed-remote/api/TypedRemote#func","content":"&lt;/&gt; TypedRemote.func( name: string, parent: Instance ) → RemoteFunction  Creates a RemoteFunction with name and parents it inside of parent. If the parent argument is not included or is nil, then it defaults to the parent of this TypedRemote ModuleScript.  "},{"title":"event​","type":1,"pageTitle":"TypedRemote","url":"/typed-remote/api/TypedRemote#event","content":"&lt;/&gt; TypedRemote.event( name: string, parent: Instance? ) → RemoteEvent  Creates a RemoteEvent with name and parents it inside of parent. If the parent argument is not included or is nil, then it defaults to the parent of this TypedRemote ModuleScript.  "},{"title":"unreliableEvent​","type":1,"pageTitle":"TypedRemote","url":"/typed-remote/api/TypedRemote#unreliableEvent","content":"&lt;/&gt; TypedRemote.unreliableEvent( name: string, parent: Instance? ) → UnreliableRemoteEvent  Creates a RemoteEvent with name and parents it inside of parent. If the parent argument is not included or is nil, then it defaults to the parent of this TypedRemote ModuleScript. "}]